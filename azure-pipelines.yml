# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
  branches:
    include:
    - ms-*
  tags:
    include:
    - '*'
  # pr:
  #   - '*'

stages:
  - stage: Build
    jobs:
    - job: Build_macOS
      pool:
        vmImage: 'macos-latest'

      steps:
      - task: Xcode@5
        inputs:
          actions: 'build'
          scheme: ''
          sdk: 'macosx10.14'
          configuration: 'Release'
          xcWorkspacePath: 'xpcPlugin/xpcPlugin.xcodeproj'
          xcodeVersion: 'default' # Options: 8, 9, 10, default, specifyPath
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'xpc-macos'
          targetPath: 'xpcPlugin/output/'

    - job: Build_linux
      pool:
        vmImage: 'ubuntu-latest'

      steps:
      - script: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y g++-5 mesa-common-dev g++-multilib g++-5-multilib
        displayName: 'apt install'
        
      - script: |
          cd xpcPlugin && cmake . && make
        displayName: 'make'

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'xpc-linux'
          targetPath: 'xpcPlugin/output/'

    - job: Build_windows
      pool:
        vmImage: 'vs2017-win2016'

      variables:
        solution: 'xpcPlugin/xpcPlugin/xpcPlugin.sln'
        buildPlatform: 'Win32|x64'
        buildConfiguration: 'Release'
        appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

      steps:
      - task: NuGetToolInstaller@0

      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'

      - task: VSBuild@1
        inputs:
          platform: 'Win32'
          solution: '$(solution)'
          configuration: '$(buildConfiguration)'
          msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

      - task: VSBuild@1
        inputs:
          platform: 'x64'
          solution: '$(solution)'
          configuration: '$(buildConfiguration)'
          msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'xpc-windows'
          targetPath: 'xpcPlugin/output/'
  
  - stage: Deploy
    jobs:
    - job: Package_Binaries
      pool:
        vmImage: 'ubuntu-latest'

      steps:
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'xpc-macos'
          targetPath: $(System.DefaultWorkingDirectory)/XPlaneConnect
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'xpc-linux'
          targetPath: $(System.DefaultWorkingDirectory)/XPlaneConnect
      
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'xpc-windows'
          targetPath: $(System.DefaultWorkingDirectory)/XPlaneConnect

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'XPlaneConnect'
          targetPath: $(System.DefaultWorkingDirectory)/XPlaneConnect

      # Archive Files 
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/XPlaneConnect' 
          includeRootFolder: true 
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/XPlaneConnect.zip' 

      - task: GitHubRelease@0
        inputs:
          gitHubConnection: 'janc_gh'
          repositoryName: '$(Build.Repository.Name)' 
          action: 'create' # Options: create, edit, delete
          target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
          tagSource: 'auto' # Required when action == Create# Options: auto, manual
          tag: $(tagName) # Required when action == Edit || Action == Delete || TagSource == Manual
          #title: # Optional
          #releaseNotesSource: 'file' # Optional. Options: file, input
          #releaseNotesFile: # Optional
          #releaseNotes: # Optional
          assets: '$(Build.ArtifactStagingDirectory)/XPlaneConnect.zip' 
          #assetUploadMode: 'delete' # Optional. Options: delete, replace
          # isDraft: false # Optional
          isPreRelease: true # Optional
          #addChangeLog: true # Optional


  
    
